@import 'colors';

$fa-font-path: "../node_modules/font-awesome/fonts";
$font-size: 14px;
$row-height: $font-size + 4px;
$title-bar-height: 24px; // If you change it, also change the same variable in ApplicationComponent.
$default-shadow: 0 2px 8px 1px rgba(0, 0, 0, 0.3);
$prompt-background-color: lighten(map-get($colors, 'black'), 5%);
$prompt-padding: 5px;
$prompt-height: 12px + (2 * $prompt-padding);

@function failurize-color($color){
  @return saturate(adjust-hue($color, 140deg), 20%);
}

@import '../node_modules/font-awesome/scss/font-awesome';
@import '../node_modules/octicons/octicons/sprockets-octicons';

// Fix the issue when icons aren't displayed.
// https://github.com/shockone/black-screen/issues/95
.fa {
  transform: translate(0, 0);
}

@font-face {
  font-family: 'octicons';
  src: url("../node_modules/octicons/octicons/octicons.eot?#iefix") format("embedded-opentype"),
  url("../node_modules/octicons/octicons/octicons.woff") format("woff"),
  url("../node_modules/octicons/octicons/octicons.ttf") format("truetype"),
  url("../node_modules/octicons/octicons/octicons.svg#octicons") format("svg");
  font-weight: normal;
  font-style: normal;
}

a {
  color: map-get($colors, 'blue');
}

@each $color, $value in $base-colors {
  [data-color='#{$color}'][data-brightness='bright'] {
    color: map-get($bright-colors, 'bright-#{$color}');
  }
}

@each $color, $value in $colors {
  [data-color='#{$color}'] {
    &:not([data-inverse='true']) {
      color: $value;
    }
    &[data-inverse='true'] {
      @if $color != 'black' {
        background-color: $value;
      }
    }
  }

  [data-background-color='#{$color}'] {
    &:not([data-inverse='true']) {
      @if $color != 'black' {
        background-color: $value;
      }
    }

    &[data-inverse='true'] {
      color: $value;
    }
  }
}

[data-inverse='true'] {
  &:not([data-background-color]) {
    color: map-get($colors, 'black');
  }

  &:not([data-color]) {
    background-color: map-get($colors, 'white');
  }
}

[data-cursor='true'] {
  background-color: map-get($colors, 'white') !important;
  color: map-get($colors, 'black') !important;
}

[data-weight='bold'] {
  font-weight: bold;
}

[data-underline='true'] {
  text-decoration: underline;
}

@mixin info-panel {
  padding: 8px 0 6px 0.6em;
  min-height: 2em;
  line-height: 1.3;
  background-color: $panel-color;
}

* {
  box-sizing: border-box;
}

::selection {
  background: map-get($colors, 'selection-color');
}

html {
  -webkit-backface-visibility: hidden;
}

body, pre {
  background-color: $background-color;
  color: map-get($colors, 'white');
  font-family: 'Hack', 'Fira Code', 'Meslo LG S for Powerline', 'Menlo', monospace !important;
  font-size: $font-size;
  margin: 0;
}

.jobs {
  margin-bottom: 40px;
}

.job {
  &.failure, &.interrupted, &.success {
    .output.alternate {
      zoom: 0.1;

      .row {
        height: 70px;
      }
    }
  }
  &.in-progress {
    .output.alternate {
      position: fixed;
      top: $title-bar-height;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 4;

      margin: 0;
      padding: 5px 0 0 0;

      .row {
        margin: 0;
      }
    }
  }

  &.failure, &.interrupted {
    .output {
      background-color: failurize-color($background-color);
    }
  }
}

.prompt-wrapper {
  $decoration-width: 30px;
  $arrow-z-index: 2;
  $progress-bar-stripes-size: 30px;
  $arrow-color: lighten($prompt-background-color, 10%);

  padding-top: $prompt-padding;
  position: relative; // To position the autocompletion box correctly.
  display: grid;
  grid-template-areas: "decoration prompt actions";
  grid-template-rows: auto;
  grid-template-columns: $decoration-width 1fr 150px;
  background-color: $prompt-background-color;
  min-height: $prompt-height + $prompt-padding;

  &.fixedsticky-on {
    box-shadow: $default-shadow;
  }

  .arrow {
    grid-area: decoration;
    position: relative;
    width: $decoration-width;
    height: $prompt-height - $prompt-padding;
    margin: 0 auto;
    overflow: hidden;
    z-index: $arrow-z-index;

    &:after {
      content: '';
      position: absolute;
      width: 200%;
      height: 200%;
      top: -11px;
      right: -8px;
      background-color: $arrow-color;
      transform-origin: 54% 0;
      transform: rotate(45deg);
      z-index: $arrow-z-index - 1;

      background-size: 0; // Is used to animate the in-progress arrow.
    }
  }

  &.failure, &.interrupted {
    background-color: failurize-color($prompt-background-color);

    .arrow:after {
      background-color: failurize-color($arrow-color);
    }
  }

  .prompt-info {
    cursor: help;
    z-index: 2;
    grid-area: decoration;
  }

  &.interrupted {
    .prompt-info {
      position: relative;
      left: 6px;
      top: 1px;
      @extend .fa;
      @extend .fa-close;
      color: map-get($colors, 'black');
    }
  }

  &.in-progress {
    .arrow {
      cursor: progress;
    }

    .arrow:after {
      @keyframes progress-bar-stripes {
        from {
          background-position: 0 0;
        }
        to {
          background-position: $progress-bar-stripes-size 0;
        }
      }

      $color: lighten(map-get($colors, 'black'), 3%);
      transition: background 0.1s step-end 0.3s;
      animation: progress-bar-stripes 0.5s linear infinite;
      background-image: linear-gradient(45deg, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
      background-size: $progress-bar-stripes-size $progress-bar-stripes-size;
    }
  }

  .prompt, .autocompleted-preview, .inline-synopsis {
    padding: 0 10px 3px 10px; // FIXME: Use grid-column-gap when it's supported.
    grid-area: prompt;
    font-size: $font-size;
    -webkit-font-feature-settings:"liga", "dlig";

    @mixin common {
      white-space: pre-wrap;
      -webkit-appearance: none;
      outline: none;
    }

    @include common;

    &:focus {
      @include common;
    }
  }

  .prompt {
    color: map-get($colors, 'white');
    z-index: 2;
  }

  .autocompleted-preview {
    color: lighten($prompt-background-color, 15%);
  }

  .inline-synopsis {
    color: map-get($colors, "yellow");
    opacity: 0.4;
  }

  .actions {
    grid-area: actions;
    margin-right: 15px;
    text-align: right;

    @mixin action {
      text-align: center;
      width: $font-size;
      display: inline-block;
      margin: 0 3px;
    }

    .scroll-to-top {
      @include action;
      color: map-get($colors, 'white');
    }

    .decoration-toggle {
      @include action;
      color: map-get($colors, 'green');

      &.disabled {
        color: map-get($colors, 'white');
      }
    }
  }
}

.output {
  $output-padding: 10px;
  padding-top: $output-padding;

  .output-cut {
    $height: $font-size * 2.6;
    @mixin jagged-border($darken-percent) {
      background: -webkit-linear-gradient(darken($panel-color, $darken-percent) 0%, transparent 0%),
                  -webkit-linear-gradient(135deg, $background-color 33.33%, transparent 33.33%) 0 0,
                  $background-color -webkit-linear-gradient(45deg, $background-color 33.33%,
                  darken($panel-color, $darken-percent) 33.33%) 0 0;
      background-repeat: repeat-x;
      background-size: 0 100%, 15px 50px, 15px 50px;
    }

    &:before {
      margin-right: 10px;
    }
    @extend .octicon;
    @extend .octicon-unfold;

    position: relative;
    top: -10px;
    width: 100%;
    height: $height;
    text-align: center;
    padding-top: ($height - $font-size) / 3;
    color: lighten($background-color, 30%);

    @include jagged-border(0%);

    &:hover {
      @include jagged-border(2%);
      color: lighten($background-color, 35%);
      cursor: pointer;
    }
  }
  // To display even empty rows. The height might need tweaking.
  // TODO: Remove if we always have a fixed buffer width.
  .row {
    padding: 0 $output-padding;
    min-height: $row-height;

    span {
      display: inline-block;
      height: $row-height;
    }
  }
}

#black-screen {
  margin-bottom: 24px;
}

#sizes-calculation {
  position: absolute;
  visibility: hidden;
  height: $row-height;
  width: auto;
  white-space: nowrap;
}

.application {
  .tabs {
    height: $title-bar-height;
    display: flex;
    justify-content: center;

    -webkit-margin-before: 0;
    -webkit-margin-after: 0;
    -webkit-padding-start: 0;
    -webkit-user-select: none;

    .tab {
      height: $title-bar-height;
      width: 150px;
      display: inline-block;
      text-align: center;
      padding-top: 2px;

      &.inactive:not(:hover) {
        opacity: 0.3;
      }

      span {
        display: inline-block;

        &.command-sign {
          font-size: $font-size + 3;
          vertical-align: middle;
        }
      }

      &:hover {
        background-color: $panel-color;
        opacity: 1;
      }
    }
  }

  .active-tab-content {
    display: flex;

    flex-wrap: nowrap;
    flex-direction: column;

    position: absolute;
    width: 100%;
    top: $title-bar-height;
    bottom: 2em;
  }
}

.session {
  height: 100%;
  width: 100%;
  flex: 1;
  overflow-x: scroll;

  &.inactive {
    opacity: 0.4;
    box-shadow: 0 0 0 1px map-get($colors, 'white');
    margin: 0 0 1px 1px;

    & .jobs {
      pointer-events: none;
    }
  }
  &.active {
    outline: none;
  }
}

.status-line {
  position: fixed;
  bottom: 0;
  width: 100%;
  z-index: 3;

  @include info-panel;

  .current-directory {
    display: inline-block;

    &:before {
      @extend .octicon;
      @extend .octicon-file-directory;
      margin-right: 5px;
    }
  }

  .vcs-data {
    display: inline-block;
    float: right;
    margin-right: 10px;

    .status {
      display: inline-block;

      &:before {
        @extend .octicon;
        @extend .octicon-git-branch;
        margin-right: 5px;
      }

      &.dirty {
        color: map-get($colors, 'blue');
      }
    }
  }
}

pre {
  white-space: pre-wrap;
}

.autocomplete {
  position: absolute;
  top: $prompt-height;
  min-width: 300px;

  box-shadow: $default-shadow;
  background-color: map-get($colors, 'black');

  ul {
    max-height: 300px;

    overflow: auto;

    padding: 0;
    margin: 0;

    li {
      list-style-type: none;
      padding: 2px;

      .value {
        padding-right: 30px;
      }

      .synopsis {
        float: right;
        opacity: 0.5;
        font-size: 0.8em;
        margin-top: 0.65em;
        margin-right: 5px;
      }

      .icon:before {
        display: inline-block;
        content: ' ';

        width: 2em;
        height: 2em;
        line-height: 2em;


        vertical-align: middle;
        text-align: center;
        font-style: normal;

        opacity: .5;
        margin-right: 10px;

        background-color: rgba(0, 0, 0, 0.15);
      }
      &.error .icon {
        @extend .fa;
        @extend .fa-exclamation-triangle;
        color: map-get($colors, 'red');
      }

      &.alias .icon {
        @extend .fa;
        @extend .fa-at;
        color: map-get($colors, 'yellow');
      }

      &.file .icon {
        @extend .fa;
        @extend .fa-file;
      }

      &.file.directory .icon {
        @extend .fa-folder;
      }

      &.file {
        &.directory {
          .icon {
            @extend .fa-folder;
          }
        }
        &.zip, &.gzip {
          .icon {
            @extend .fa-file-archive-o;
          }
        }

        &.js, &.ts, &.rb, &.json {
          .icon {
            @extend .fa-file-code-o;
          }
        }
      }

      &.executable .icon {
        @extend .fa;
        @extend .fa-asterisk;
        color: map-get($colors, 'green');
      }

      &.history .icon {
        @extend .fa;
        @extend .fa-history;
        color: map-get($colors, 'blue');
      }

      &.history-expansion .icon {
        @extend .fa;
        @extend .fa-exclamation;
        color: map-get($colors, 'blue');
      }

      &.command .icon {
        @extend .fa;
        @extend .fa-terminal;
        color: map-get($colors, 'green');
      }

      &.option .icon {
        @extend .fa;
        @extend .fa-flag-o;
        color: map-get($colors, 'green');
      }

      &.option-value .icon {
        &:before {
          content: "=";
          color: map-get($colors, 'green');
        }
      }

      &.branch .icon {
        @extend .octicon;
        @extend .octicon-git-branch;
      }

      &.highlighted {
        background-color: #383E4A;
      }
    }
  }

  .description {
    display: block;
    box-shadow: 0 4px 8px 1px rgba(0, 0, 0, 0.3);

    position: absolute;
    left: 0;
    right: 0;

    font-size: 0.8em;

    @include info-panel;
  }
}

.fixedsticky {
  top: 0;
}
